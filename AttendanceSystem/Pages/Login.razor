@* @page "/login"
@using AttendanceSystem.Services
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject IUserService UserService

<div class="row">
    <div class="col-md-6 offset-md-3">
        <div class="card">
            <div class="card-header">
                <h3>Login</h3>
            </div>
            <div class="card-body">
                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    
                    <div class="form-group mb-3">
                        <label for="utdId">UTD ID</label>
                        <InputText id="utdId" @bind-Value="loginModel.UtdId" class="form-control" placeholder="Enter UTD ID" />
                        <ValidationMessage For="@(() => loginModel.UtdId)" />
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="password">Password</label>
                        <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" placeholder="Enter password" />
                        <ValidationMessage For="@(() => loginModel.Password)" />
                    </div>
                    
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var user = await UserService.AuthenticateAsync(loginModel.UtdId, loginModel.Password);
            
            if (user != null)
            {
                // User is authenticated, determine role
                string roleName = user.RoleName.ToLower();
                
                // Redirect based on role - either "professor" or "student"
                if (roleName == "professor" || roleName == "student")
                {
                    NavigationManager.NavigateTo($"/attendance?username={roleName}");
                }
                else
                {
                    NavigationManager.NavigateTo("/unauthorized");
                }
            }
            else
            {
                errorMessage = "Invalid UTD ID or password. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Login error: {ex.Message}";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "UTD ID is required")]
        [Display(Name = "UTD ID")]
        public string UtdId { get; set; }
        
        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }
} *@

@page "/login"
@inject NavigationManager NavigationManager

<h3>Login</h3>
<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="loginModel.Username" placeholder="Enter username" />
    </div>
    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="loginModel.Password" placeholder="Enter password" type="password" />
    </div>
    <div>
        <button type="submit">Login</button>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        // Pass the username as a query parameter
        NavigationManager.NavigateTo($"/attendance?username={loginModel.Username}");
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
@page "/professor"
@using Microsoft.EntityFrameworkCore
@using AttendanceSystem.Data.Models
@inject AttendanceDbContext DbContext

<PageTitle>My Classes (Professor)</PageTitle>

<div class="max-w-6xl mx-auto p-6">
    <h1 class="text-3xl font-semibold text-gray-800 mb-6 text-center">My Classes</h1>

    @if (ProfessorClasses.Count == 0)
    {
        <p class="text-center text-gray-500">You're not teaching any classes yet.</p>
    }
    else
    {
        <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
            @foreach (var classItem in ProfessorClasses)
            {
                <a href="/professor/class/@classItem.Id" 
                   class="block no-underline text-inherit focus:outline-none focus:ring-2 focus:ring-blue-300">
                    <div class="text-gray-800 border border-gray-300 rounded-xl bg-white p-5 hover:shadow-md transition-shadow duration-200">
                        <h2 class="text-lg font-semibold mb-2">@classItem.Name</h2>
                        <div class="text-sm space-y-1">
                            <p><strong>Time:</strong> @classItem.Time</p>
                            <p><strong>Room:</strong> @classItem.Room</p>
                        </div>
                        <div class="mt-4 flex justify-between items-center text-sm">
                            <span>Students Enrolled: <strong>@classItem.TotalStudents</strong></span>
                            <span class="font-medium text-blue-600">Present Today: @classItem.PresentToday</span>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>

@code {
    private List<ProfessorClassItem> ProfessorClasses = new();

    protected override async Task OnInitializedAsync()
    {
        var professorId = 1; // TODO: Replace with actual logged-in professor ID

        // Query all classes taught by this professor, including attendance and enrollment
        var classes = await DbContext.Classes
            .Where(c => c.InstructorID == professorId)
            .Include(c => c.AttendanceRecords)
            .ToListAsync();

        ProfessorClasses = classes.Select(c => new ProfessorClassItem
        {
            Id = c.ClassID,
            Name = c.Name,
            Time = c.Time,
            Room = c.Room,
            TotalStudents = c.TotalStudents,
            PresentToday = c.AttendanceRecords.Count(a => a.Date.Date == DateTime.Today && a.Status == "Present")
        }).ToList();
    }

    public class ProfessorClassItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Time { get; set; } = "";
        public string Room { get; set; } = "";
        public int TotalStudents { get; set; }
        public int PresentToday { get; set; }
    }
}

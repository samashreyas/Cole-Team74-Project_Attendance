@* Professor Dashboard Page *@
@* Has Frontend for Listing all of the Logged In Professors' Classes *@
@* Made by Steven Maddela, Jackson Wilson *@

@page "/professor"
@using Microsoft.EntityFrameworkCore
@using AttendanceSystem.Data.Models
@using System.Security.Claims
@inject AttendanceDbContext DbContext
@inject AuthenticationStateProvider AuthProvider

@* Button Styling *@
<style>
    .blue-button {
        background-color: #3b82f6;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        transition: background-color 0.2s;
    }

    .blue-button:hover {
        background-color: #2563eb;
    }
</style>

<PageTitle>My Classes (Professor)</PageTitle>

<div class="mb-4">
        <h2 class="font-semibold pb-1">Class Management</h2>
        <div class="space-x-2">
 @* Button to route to assign students page, with professor ID passed as query parameter *@
            <a href="/assign-students?professorId=@ProfessorID" class="blue-button" style="text-decoration: none;">Assign Students</a>
 @* Button to route to upload students page *@
            <a href="/upload-students" class="blue-button" style="text-decoration: none;">Upload Students</a>
        </div>
    </div>

@* Main content area displaying the all of the current professor's classes *@
<div class="max-w-6xl mx-auto p-6">
    <h1 class="text-3xl font-semibold text-gray-800 mb-6 text-center">My Classes</h1>

    @if (ProfessorClasses.Count == 0)
    {
        <p class="text-center text-gray-500">You're not teaching any classes yet.</p>
    }
    else
    {
        <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
            @foreach (var classItem in ProfessorClasses)
            {
@* Link to individual class page *@
                <a href="/professor/class/@classItem.ClassID"
                   class="block no-underline text-inherit focus:outline-none focus:ring-2 focus:ring-blue-300">
                    <div class="text-gray-800 border border-gray-300 rounded-xl bg-white p-5 hover:shadow-md transition-shadow duration-200">
                        <h2 class="text-lg font-semibold mb-2">@classItem.Name</h2>
                        <div class="text-sm space-y-1">
@* Class time and room info *@
                            <p><strong>Time:</strong> @classItem.Time</p>
                            <p><strong>Room:</strong> @classItem.Room</p>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>

@code {
// List to hold the professor's classes
    private List<Class> ProfessorClasses = new();
// Stores the current professor's ID to send to assign students page
    private int ProfessorID;

    protected override async Task OnInitializedAsync()
    {
        // Ensure user is logged in
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity?.IsAuthenticated ?? true)
        {
            Console.WriteLine("User not authenticated.");
            return;
        }

// Try to get the professor's ID from the logged in user
        var userIdClaim = user.FindFirst(ClaimTypes.NameIdentifier);
        if (!int.TryParse(userIdClaim?.Value, out int professorId))
        {
            Console.WriteLine("Failed to parse professor ID.");
            return;
        }
// Save the professor ID and load classes taught by this professor
        Console.WriteLine($"Loading classes for ProfessorID = {professorId}");
        ProfessorID = professorId;
        // Query the database for all classes taught by this professor
        ProfessorClasses = await DbContext.Classes
            .Where(c => c.InstructorID == professorId)
            .ToListAsync();
    }
}
